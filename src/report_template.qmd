---
---

```{python}
#| tags: [parameters]
pid = "testjen"
```

```{python}
#| echo: false
import pandas as pd 
import plotnine as p9 

from great_tables import *
from pull_data import pull_daily_survey_data, pull_daily_fitbit_data
from wrangle_data_for_plots import *
from create_plots import *
from create_tables import *

import warnings
warnings.filterwarnings("ignore")
```

```{python}
score_min = 0
score_max = 10
score_na = -1

scores = [i for i in range(score_min, score_max+1, 1)]
score_categories = [score_na] + scores

goodness_cmap_continuous = generate_custom_cmap("redyellowgreen", "continuous")
goodness_cmap_discrete = generate_custom_cmap("redyellowgreen", "discrete", n_colors=len(scores))
goodness_cmap_hexcodes = get_cmap_hexcodes(goodness_cmap_discrete, n_colors=len(scores))

frequency_cmap_discrete = generate_custom_cmap("indigo", "discrete", n_colors=len(scores))
frequency_cmap_hexcodes = get_cmap_hexcodes(frequency_cmap_discrete, n_colors=len(scores))
```

```{python}
survey_data = pull_daily_survey_data(pid)
fitbit_data = pull_daily_fitbit_data(pid)
value_box_data = get_value_box_data(survey_data, fitbit_data)

if not survey_data.empty:
    # goodness
    goodness_data = get_goodness_data(survey_data)
    goodness_bar_plot_data = get_goodness_bar_plot_data(goodness_data, scores)
    goodness_data_per_day = get_goodness_data_per_day(goodness_data)
    goodness_range_plot_data = get_goodness_range_plot_data(goodness_data_per_day)
    goodness_range_plot_gradient_data = get_goodness_range_plot_gradient_data(goodness_range_plot_data)

    # activities
    activity_data = get_activity_data(survey_data)
    enjoyment_per_activity = get_enjoyment_per_activity(activity_data)
    activity_frequencies = get_activity_bar_plot_data(enjoyment_per_activity)

    ordered_activities_list = get_activity_list_ordered_by_frequency(activity_frequencies)

    activity_range_plot_data = get_activity_range_plot_data(enjoyment_per_activity)
    activity_range_plot_gradient_data = get_activity_range_plot_gradient_data(activity_range_plot_data)

    # goodness and activities
    goodness_and_activity_endorsements = get_goodness_and_activity_endorsement_data(survey_data)
    goodness_and_activity_ratings = get_goodness_and_activity_rating_data(survey_data)

    activity_occurrence_by_day_of_week_data = get_activity_occurrence_by_day_of_week_data(survey_data, goodness_and_activity_endorsements, ordered_activities_list)
    activity_co_occurrence_data = get_activity_co_occurrence_data(activity_frequencies, goodness_and_activity_endorsements)

    goodness_by_activity_range_plot_data = get_goodness_by_activity_range_plot_data(activity_data, goodness_data)
    goodness_by_activity_range_plot_gradient_data = get_goodness_by_activity_range_plot_gradient_data(goodness_by_activity_range_plot_data)

    activity_lollipop_plot_data = get_activity_lollipop_plot_data(survey_data, goodness_and_activity_endorsements)
    activity_rating_lollipop_plot_data = get_activity_lollipop_plot_data(survey_data, goodness_and_activity_ratings)

    rating_scatterplot_data = get_rating_scatterplot_data(activity_data, goodness_data)
    correlation_lollipop_plot_data = get_correlation_lollipop_plot_data(activity_data, goodness_data, corr_method="spearman")

    if not fitbit_data.empty:
        fitbit_scatterplot_data, fitbit_correlations = get_fitbit_scatterplot_data(fitbit_data, goodness_data)
```

<br>

## Thank you! :tada:

Thank you for completing Phase 1 of the BALANCE study! During this phase, each evening, you rated the goodness of your day on a scale from 0 to 10 and indicated which activities you did. You also optionally rated your enjoyment of each activity using the same 0 to 10 scale.  

Here's a snapshot of your month:    

```{python}
create_value_boxes(value_box_data)
```

We will review your daily goodness and activity data from Phase 1 to help you identify a handful of meaningful activities to focus on in Phase 2. 

<br>

## Goodness ratings

### Goodness frequency

::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays how often you rated a day a given goodness rating on a scale from 0 to 10. The height of each bar reflects the number of days during the study that you gave **X** goodness rating.  
:::


```{python}
if survey_data.empty:
    plot = create_placeholder("plot")
else: 
    plot = create_goodness_bar_plot(
        goodness_bar_plot_data, 
        goodness_cmap_hexcodes
    )
plot
```


### Goodness average and range

::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays your average and range of daily goodness ratings. The width of each ribbon reflects the range of your goodness ratings overall during the study, or on day of the week **Y**. The **left** dot is your **minimum** goodness rating, the **center** dot is your **average** goodness rating, and the **right** dot is your **maximum** goodness rating. Only the center average dot is displayed if your minimum and maximum goodness ratings were equal.    
:::

```{python}
if survey_data.empty:
    plot = create_placeholder("plot")
else: 
    plot = create_goodness_range_plot(
        goodness_range_plot_data, 
        goodness_range_plot_gradient_data, 
        goodness_cmap_hexcodes
    )
plot
```

<br>
<br>

## Activities

### Activity frequency & rating average and range

::: {.callout-tip collapse="true"}
## How to read the plot
These plots display how often you did each activity and the average and range of your enjoyment ratings for that activity on a scale from 0 to 10, if available. On the left, the length of each bar reflects the number of days during the study that you did activity **Y**. On the right, the width of each ribbon reflects the range of your ratings for that activity using a scale of 0-10. The **left** dot is your **minimum** activity rating, the **center** dot is your **average** activity rating, and the **right** dot is your **maximum** activity rating. Only the center average dot is displayed if your minimum and maximum activity ratings were equal; no dots are displayed if you never rated the activity. Activities are ordered by their overall frequency.    
:::

::: {layout-ncol=2}

```{python}
if survey_data.empty:
    plot = create_placeholder("plot", width=5)
else: 
    plot = create_activity_bar_plot(
        activity_frequencies, 
        goodness_cmap_hexcodes
    )
plot
```

```{python}
if survey_data.empty:
    plot = create_placeholder("plot", width=5)
else: 
    plot = create_activity_range_plot(
        activity_range_plot_data, 
        activity_range_plot_gradient_data, 
        goodness_cmap_hexcodes
    )
plot
```

:::

<br>

### Activity occurrence by day of week

::: {.callout-tip collapse="true"}
## How to read the table
The table displays how often you did each activity on different days of the week. Each value reflects the percent of all days of week **X** on which you did activity **Y**. Activities are arranged in order of their overall frequency. Activities that you did every day have been omitted. 
:::

```{python}
#| html-table-processing: none
if survey_data.empty:
    table = create_placeholder("table")
else: 
    n_surveys = len(activity_data["survey_id"].drop_duplicates())
    constant_activities = activity_frequencies.query("activity_name_count == @n_surveys")["activity_name"].tolist()
    if len(ordered_activities_list) == len(constant_activities): 
        table = create_placeholder("table")
    else:
        table = create_activity_day_of_week_table(
            activity_data, 
            activity_frequencies, 
            activity_occurrence_by_day_of_week_data, 
            ordered_activities_list
        )
table
```

<br>

### Related activities

::: {.callout-tip collapse="true"}
## How to read the table
This table displays on days you did each activity how frequently you also did other activities. **Never** is defined as 0%, **Rarely** as more than 0% but less than 33%, **Sometimes** as 33% or more but less than 67%, **Often** as 67% or more but less than 100%, and **Always** as 100% of days on which you did activity **Y**. Activities are arranged in order of their overall frequency, and related activities are arranged by percent. Activities that you did every day have been omitted from both activites and related activities. 
:::

```{python}
#| html-table-processing: none
if survey_data.empty:
    table = create_placeholder("table")
else: 
    n_surveys = len(activity_data["survey_id"].drop_duplicates())
    constant_activities = activity_frequencies.query("activity_name_count == @n_surveys")["activity_name"].tolist()
    if len(ordered_activities_list) == len(constant_activities): 
        table = create_placeholder("table")
    else:
        table = create_related_activities_table(
            activity_data, 
            activity_frequencies, 
            activity_co_occurrence_data, 
            ordered_activities_list, 
            frequency_cmap_hexcodes
        )
table
```

<br>
<br>

## Goodness ratings & activities

### Goodness average and range by activity occurrence

::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays your average and range of daily goodness ratings on days you did each activity. The width of each ribbon reflects the range of your goodness ratings on days you did activity **Y**. The **left** dot is your **minimum** goodness rating, the **center** dot is your **average** goodness rating, and the **right** dot is your **maximum** goodness rating. Only the center average dot is displayed if your minimum and maximum goodness ratings were equal. Activites are ordered by average goodness rating.  
:::

```{python}
if survey_data.empty:
    plot = create_placeholder("plot")
else: 
    plot = create_goodness_by_activity_range_plot(
        goodness_by_activity_range_plot_gradient_data, 
        goodness_by_activity_range_plot_data, 
        goodness_cmap_hexcodes
)
plot
```

<br>

### Difference in average goodness by activity occurrence

::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays the percent difference in average daily goodness rating on days you did vs. did not do each activity. On days you did activity **Y**, your average same-day goodness rating was **X% worse** (red-yellow) or **better** (yellow-green) than on days you did not do that activity. Differences are 0% if there was no difference in average same-day goodness between days you did and did not do the activity, or if you did the activity every day.  
:::

```{python}
if survey_data.empty:
    plot = create_placeholder("plot")
else: 
    if activity_rating_lollipop_plot_data.empty:
        plot = create_placeholder("plot")
    else:
        plot = create_activity_lollipop_plot(
            activity_lollipop_plot_data, 
            goodness_cmap_hexcodes, 
            "Days you did vs. did not do the activity"
        )
plot
```

<br>

### Difference in average goodness by activity rating

::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays the percent difference in average daily goodness rating on days you did each activity and rated its enjoyment as higher than your average rating for that activity vs. days you did each activity and rated its enjoyment as average or below average for that activity. On days you did activity **Y** and rated it higher than average, your average same-day goodness rating was **X% worse** (red-yellow) or **better** (yellow-green) than on days you did that activity and rated it average or lower. Differences are 0% if there was no difference in average same-day goodness between days you rated the activity higher than average or average or lower, or if you rated the activity the same every day.  
:::

```{python}
if survey_data.empty:
    plot = create_placeholder("plot")
else: 
    if activity_rating_lollipop_plot_data.empty:
        plot = create_placeholder("plot")
    else:
        plot = create_activity_lollipop_plot(
            activity_rating_lollipop_plot_data, 
            goodness_cmap_hexcodes, 
            "Days you rated the activity higher than average vs. average or lower"
        )
plot
```

<br>

### Correlations between goodness ratings & activity ratings

::: {.callout-tip collapse="true"}
## How to read the plot
In this plot, for each activity, your daily activity ratings (**Y**) are plotted against your same-day daily goodness ratings (**X**). The color of each point reflects the daily goodness rating. Activities that did not have at least one activity rating are omitted. Activities are arranged in alphabetical order. 

The value in the lower left corner of each plot is the Spearman correlation coefficient between your daily activity ratings and your same-day goodness ratings. A **negative correlation (red)** reflects that the higher (or lower) you rated your enjoyment of an activity the lower (or higher) you tended to rate your same-day goodness (or vice versa). A **positive correlation (green)** reflects that the higher (or lower) you rated your enjoyment of an activity, the higher (or lower) you tended to rate your same-day goodness (or vice versa). Larger correlation coefficient values reflect that these associations are stronger. Correlations between goodness and activity ratings are equal to 0 (grey) if there is no association, or if there was not enough variability in your ratings.   
:::

```{python}
if survey_data.empty:
    plot = create_placeholder("plot")
else:
    if rating_scatterplot_data["activity_score"].isnull().all():
        plot = create_placeholder("plot")
    else: 
        plot = create_rating_scatterplot_with_correlations(
            rating_scatterplot_data, 
            correlation_lollipop_plot_data, 
            goodness_cmap_hexcodes
        )
plot
```

<br>
<br>

## Goodness ratings & Fitbit

### Correlations between goodness ratings & sleep and steps

::: {.callout-tip collapse="true"}
## How to read the plot
In this plot, your daily hours of sleep and total steps, measured by your Fitbit (**Y**), are plotted against your same-day daily goodness ratings (**X**). The color of each point reflects the daily goodness rating. 

The value in the lower left corner of each plot is the Spearman correlation coefficient between your daily sleep or steps and your same-day goodness ratings. A **negative correlation (red)** reflects that the more (or less) sleep you got or steps you took, the lower (or higher) you tended to rate your same-day goodness (or vice versa). A **positive correlation (green)** reflects that the more (or less) sleep you got or steps you took, the higher (or lower) you tended to rate your same-day goodness (or vice versa). Larger correlation coefficient values reflect that these associations are stronger. Correlations between goodness and sleep or steps are equal to 0 (grey) if there is no association, or if there was not enough variability in your goodness ratings or Fitbit measurements.  
:::

```{python}
if survey_data.empty:
    plot = create_placeholder("plot")
else:
    if fitbit_data.empty:
        plot = create_placeholder("plot")
    else:
        if fitbit_scatterplot_data["value"].isnull().all():
            plot = create_placeholder("plot")
        else: 
            plot = create_fitbit_scatterplot(
                fitbit_scatterplot_data, 
                fitbit_correlations,
                goodness_cmap_hexcodes
            )
plot
```

<br>
<br>