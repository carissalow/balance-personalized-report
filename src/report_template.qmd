---
title: "BALANCE mid-study report for testjen"
author: "Mobile Sensing + Health Institute"
date: today
format: 
    html:
        toc: true
        toc-location: left
        number-sections: false
        theme: cosmo
        max-width: 2400px
        fontsize: 1em
        self-contained: true
        embed-resources: true
        fig-dpi: 2000
        fig-align: right
        page-layout: full
        linkcolor: "#3F51B5"
        toc-color: "#3F51B5"
echo: false
message: false 
warning: false
from: "markdown+emoji"
---

```{python}
#| echo: false
import pandas as pd 
import plotnine as p9 

from pull_data import pull_daily_survey_data
from wrangle_data_for_plots import *
from create_plots import *

import warnings
warnings.filterwarnings("ignore")
```

```{python}
def get_enjoyment_per_activity(activity_data):
    enjoyment_per_activity = (
        activity_data
        .assign(activity_score = lambda x: np.where(x["activity_score"] == -1, np.nan, x["activity_score"]))
        .groupby(["activity_id", "activity_name"])
        .agg({"activity_name": ["count"], "activity_score": ["mean", "min", "max"]})
        .reset_index()
        .pipe(flatten_columns)
    )
    return enjoyment_per_activity
```

```{python}
#| echo: false
pid = "testjen"

score_min = 0
score_max = 10
score_na = -1

scores = [i for i in range(score_min, score_max+1, 1)]
score_categories = [score_na] + scores

goodness_cmap_continuous = generate_custom_cmap("redyellowgreen", "continuous")
goodness_cmap_discrete = generate_custom_cmap("redyellowgreen", "discrete", n_colors=len(scores))
goodness_cmap_hexcodes = get_cmap_hexcodes(goodness_cmap_discrete, n_colors=len(scores))

frequency_cmap_discrete = generate_custom_cmap("indigo", "discrete", n_colors=len(scores))
frequency_cmap_hexcodes = get_cmap_hexcodes(frequency_cmap_discrete, n_colors=len(scores))
```

```{python}
#| echo: false
survey_data = pull_daily_survey_data(pid)

# phase 1 summary
value_box_data = get_value_box_data(survey_data)

# goodness
goodness_data = get_goodness_data(survey_data)
goodness_bar_plot_data = get_goodness_bar_plot_data(goodness_data, score_categories)
goodness_data_per_day = get_goodness_data_per_day(goodness_data)
goodness_range_plot_data = get_goodness_range_plot_data(goodness_data_per_day)
goodness_range_plot_gradient_data = get_goodness_range_plot_gradient_data(goodness_range_plot_data)

# activities
activity_data = get_activity_data(survey_data)
enjoyment_per_activity = get_enjoyment_per_activity(activity_data)
activity_frequencies = get_activity_bar_plot_data(enjoyment_per_activity)

ordered_activities_list = get_activity_list_ordered_by_frequency(activity_frequencies)

activity_range_plot_data = get_activity_range_plot_data(enjoyment_per_activity)
activity_range_plot_gradient_data = get_activity_range_plot_gradient_data(activity_range_plot_data)

# goodness and activities
goodness_and_activity_endorsements = get_goodness_and_activity_endorsement_data(survey_data)
goodness_and_activity_ratings = get_goodness_and_activity_rating_data(survey_data)

activity_occurrence_by_day_of_week_data = get_activity_occurrence_by_day_of_week_data(survey_data, goodness_and_activity_endorsements, ordered_activities_list)
activity_co_occurrence_data = get_activity_co_occurrence_data(activity_frequencies, goodness_and_activity_endorsements)
activity_clusters = get_activity_clusters(goodness_and_activity_endorsements, activity_frequencies, n_clusters=5)

goodness_activity_tile_plot_data = get_activity_tile_plot_data(activity_frequencies, goodness_and_activity_endorsements, scores)

goodness_by_activity_range_plot_data = get_goodness_by_activity_range_plot_data(activity_data, goodness_data)
goodness_by_activity_range_plot_gradient_data = get_goodness_by_activity_range_plot_gradient_data(goodness_by_activity_range_plot_data)

activity_lollipop_plot_data = get_activity_lollipop_plot_data(survey_data, goodness_and_activity_endorsements)
activity_rating_lollipop_plot_data = get_activity_lollipop_plot_data(survey_data, goodness_and_activity_ratings)

rating_scatterplot_data = get_rating_scatterplot_data(activity_data, goodness_data)
correlation_lollipop_plot_data = get_correlation_lollipop_plot_data(activity_data, goodness_data, corr_method="spearman")
```

<br>

## Thank you! :tada:

Thank you for completing Phase 1 of the BALANCE study! During this phase, each evening, you rated the goodness of your day on a scale from 0 to 10 and indicated which activities you did. You also optionally rated your enjoyment of each activity using the same 0 to 10 scale.  

Here's a snapshot of your month:    

```{python}
#| echo: false

#Alternative section title: ## Thank you! :tada:
create_value_boxes(value_box_data, include_n_activities=False, width=12, height=1)
```

<br>

We will review your goodness and activity data from Phase 1 to help you identify a handful of meaningful activities to focus on in Phase 2. 

<br>

## Goodness ratings

### Goodness frequency

::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays how often you rated a day a given goodness rating on a scale from 0 to 10. The height of each bar reflects the number of days during the study that you gave **X** goodness rating.  
:::


```{python}
#| echo: false
create_goodness_bar_plot(goodness_bar_plot_data, goodness_cmap_hexcodes, title=False)
```


### Goodness average and range

::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays your average and range of goodness ratings. The width of each ribbon reflects the range of your goodness ratings overall during the study, or on day of the week **Y**. The **left** dot is your **minimum** goodness rating, the **center** dot is your **average** goodness rating, and the **right** dot is your **maximum** goodness rating. Only the center average dot is displayed if your minimum and maximum goodness ratings were equal.    
:::

```{python}
#| echo: false
create_goodness_range_plot(goodness_range_plot_data, goodness_range_plot_gradient_data, goodness_cmap_hexcodes)
```

<br>
<br>

## Activities

### Activity frequency & rating average and range

::: {.callout-tip collapse="true"}
## How to read the plot
These plots display how often you did each activity and the average and range of your enjoyment ratings for that activity on a scale from 0 to 10, if available. On the left, the length of each bar reflects the number of days during the study that you did activity **Y**. On the right, the width of each ribbon reflects the range of your ratings for that activity using a scale of 0-10. The **left** dot is your **minimum** activity rating, the **center** dot is your **average** activity rating, and the **right** dot is your **maximum** activity rating. Only the center average dot is displayed if your minimum and maximum activity ratings were equal; no dots are displayed if you never rated the activity. Activities are ordered by their overall frequency.    
:::

::: {layout-ncol=2}

```{python}
#| echo: false
create_activity_bar_plot(activity_frequencies, goodness_cmap_hexcodes)

# .column-page ?
```

```{python}
#| echo: false
create_activity_range_plot(activity_range_plot_data, activity_range_plot_gradient_data, goodness_cmap_hexcodes)
```

:::

<br>

### Activity occurrence by day of week

::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays the percent of days on which you did activity **Y** among all days of the week **X**. Darker blue colors reflect that you did activity **Y** more often on day of week **X**, while lighter blue colors reflect that you did activity **Y** less often on day of week **X**. The darkest blue corresponds to 100% and white corresponds to 0%. Activities are ordered by their overall frequency. 
:::

```{python}
create_activity_occurrence_by_day_of_week_heatmap(activity_occurrence_by_day_of_week_data, frequency_cmap_hexcodes)
```

<br>

### Activity co-occurrence

::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays the percent of days on which you did activity **Y** that you also did activity **X**. Darker blue colors reflect that on days you did activity **Y**, you also did activity **X** more often, while lighter blue colors reflect that on days you did activity **Y**, you also did activity **X** less often. The darkest blue corresponds to 100% and white corresponds to 0%. Activities are ordered by their overall frequency. 
:::

```{python}
#| echo: false
create_activity_co_occurrence_heatmap(activity_co_occurrence_data, frequency_cmap_hexcodes)
```

<br>

### Activity clusters 

::: {.callout-tip collapse="true"}
## How to read the plot
Activities were grouped into 5 clusters based on their similarity using unsupervised hierarchical clustering. The plot displays the unique activities belonging to cluster **X** stacked above their assigned cluster number. The cluster number is just an identifier and otherwise has no meaning. The color of the activity label reflects its overall frequency.
:::

```{python}
#create_activity_cluster_plot(activity_clusters, frequency_cmap_hexcodes[1:][:-3]) #The color of the activity label is assigned based on the cluster number.
create_activity_cluster_plot(activity_clusters, goodness_cmap_hexcodes, fill_var="activity_name_count")
```

<br>
<br>

## Goodness ratings & activities

### Goodness average and range by activity occurrence

::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays your average and range of goodness ratings on days you did each activity. The width of each ribbon reflects the range of your goodness ratings on days you did activity **Y**. The **left** dot is your **minimum** goodness rating, the **center** dot is your **average** goodness rating, and the **right** dot is your **maximum** goodness rating. Only the center average dot is displayed if your minimum and maximum goodness ratings were equal. Activites are ordered by average goodness rating.  
:::

```{python}
"""
::: {.callout-tip collapse="true"}
## How to read the plot
The color of the vertical ribbon reflects your goodness rating on day **X**. The days on which you did activity **Y** are indicated with a star. Activities are ordered by their overall frequency.   
:::
"""
# create_activity_tile_plot(goodness_activity_tile_plot_data, ordered_activities_list, goodness_cmap_hexcodes, include_legend=True)
create_goodness_by_activity_range_plot(goodness_by_activity_range_plot_gradient_data, goodness_by_activity_range_plot_data, goodness_cmap_hexcodes)
```

<br>

### Difference in average goodness by activity occurrence


::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays the percent difference in average goodness rating on days you did vs. did not do each activity. On days you did activity **Y**, your average same-day goodness rating was **X% worse** (red-yellow) or **better** (yellow-green) than on days you did not do that activity. Differences are 0% if there was no difference in average same-day goodness between days you did and did not do the activity, or if you did the activity every day.  
:::

```{python}
#| echo: false
create_activity_lollipop_plot(activity_lollipop_plot_data, goodness_cmap_hexcodes, "Days you did vs. did not do the activity")
```

<br>

### Difference in average goodness by activity rating

::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays the percent difference in average goodness rating on days you did each activity and rated its enjoyment as higher than your average rating for that activity vs. days you did each activity and rated its enjoyment as average or below average for that activity. On days you did activity **Y** and rated it higher than average, your average same-day goodness rating was **X% worse** (red-yellow) or **better** (yellow-green) than on days you did that activity and rated it average or lower. Differences are 0% if there was no difference in average same-day goodness between days you rated the activity higher than average or average or lower, or if you rated the activity the same every day.  
:::

```{python}
#| echo: false
create_activity_lollipop_plot(activity_rating_lollipop_plot_data, goodness_cmap_hexcodes, "Days you rated the activity higher than average vs. average or lower")
```

<br>

### Correlations between goodness ratings & activity ratings

::: {.callout-tip collapse="true"}
## How to read the plot
In this plot, for each activity, your daily activity ratings (**Y**) are plotted against your same-day daily goodness ratings (**X**). The color of each point reflects the daily goodness rating. Activities that did not have at least one activity rating are omitted. Activities are arranged in alphabetical order. 
:::

```{python}
create_rating_scatterplot(rating_scatterplot_data, goodness_cmap_hexcodes)
```

<br>

::: {.callout-tip collapse="true"}
## How to read the plot
This plot displays for each activity the correlation between your daily activity ratings and your same-day goodness ratings. On the left half of the plot, there is a **negative** correlation between your enjoyment of activity **Y** and your same-day goodness rating. In other words, the higher (or lower) you rated your enjoyment of activity **Y**, the lower (or higher) you tended to rate your same-day goodness (or vice versa). On the right half of the plot, there is a **positive** correlation between your enjoyment of activity **Y** and your same-day goodness rating. In other words, the higher (or lower) you rated your enjoyment of activity **Y**, the higher (or lower) you tended to rate your same-day goodness (or vice versa). Larger correlation coefficient values reflect that these associations are stronger. Correlations between goodness and activity ratings are equal to 0 if there is no association, if you never rated the activity, or if there was not enough variability in your ratings.   
:::

```{python}
create_correlation_lollipop_plot(correlation_lollipop_plot_data, goodness_cmap_hexcodes, corr_method="Spearman")
```